<Window x:Class="MTerminal.WPF.TerminalWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:conv="clr-namespace:MTerminal.WPF.Converters"
        xmlns:local="clr-namespace:MTerminal.WPF" 
        mc:Ignorable="d"
        Title="{Binding WindowTitle}"
        x:Name="window"
        Width="750" MinWidth="400"
        Height="360" MinHeight="200"
        Background="{x:Null}" AllowsTransparency="True"
        UseLayoutRounding="True"
        WindowStyle="None"
        FontSize="16"
        FontWeight="Medium"
        FontFamily="Consolas"
        FocusManager.FocusedElement="{Binding ElementName=commandBox}"
        KeyDown="Window_KeyDown"
        Mouse.PreviewMouseWheel="window_MouseWheel">

    <Window.Resources>
        <conv:DateTimeFormatterConverter x:Key="DateFormatConverter"/>
        <BooleanToVisibilityConverter x:Key="BoolToVisibility"/>

        <SolidColorBrush x:Key="BG" Color="#191919"/>
        <SolidColorBrush x:Key="Border" Color="#444"/>
        <SolidColorBrush x:Key="HeaderBG" Color="#333"/>

        <DropShadowEffect x:Key="DropShadow" BlurRadius="26" ShadowDepth="4" 
                          Direction="-90" Opacity="0.5"/>

        <DropShadowEffect x:Key="NoDropShadow" BlurRadius="0" ShadowDepth="0" 
                          Direction="-90" Opacity="1"/>

        <!-- HEADER BUTTONS -->
        <Style TargetType="Button" x:Key="HeaderCloseButton">
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="#ee5050" Opacity="0"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="Border" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.03" From="0" To="1" Storyboard.TargetProperty="Background.Opacity"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.3" From="1" To="0" Storyboard.TargetProperty="Background.Opacity"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="HeaderButton">
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="#555" Opacity="0"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="Border" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.03" From="0" To="1" Storyboard.TargetProperty="Background.Opacity"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.3" From="1" To="0" Storyboard.TargetProperty="Background.Opacity"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="LogEntryTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="90"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Grid.ToolTip>
                    <StackPanel>
                        <TextBlock Text="{Binding TimeStamp, StringFormat=yyyy-MM-dd---HH:mm:ss}"/>
                        <TextBlock Text="{Binding CallerMethodName}">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding CallerMethodName.Length}" Value="0">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock Text="{Binding CallerFileName}">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding CallerFileName.Length}" Value="0">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock Text="{Binding CallerLineNumber}">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding CallerLineNumber}" Value="-1">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock Text="{Binding Exception.Message}">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Exception.Message.Length}" Value="0">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>
                </Grid.ToolTip>

                <!--<TextBlock Grid.Column="0" Text="{Binding TimeStamp, Converter={StaticResource DateFormatConverter}}"
                           Foreground="{Binding Level, Converter={StaticResource LogLevelColorStringConveter}}"/>
                <TextBlock Margin="4 0" Grid.Column="1" Text="{Binding Level, Converter={StaticResource LogLevelStringConveter}}"
                           Foreground="{Binding Level, Converter={StaticResource LogLevelColorStringConveter}}"
                           HorizontalAlignment="Left"/>
                <TextBlock Grid.Column="2" Text="{Binding Message}"
                           TextWrapping="Wrap"
                           Foreground="{Binding Level, Converter={StaticResource LogLevelColorStringConveter}}"/>-->

            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="ServiceEntryTemplate">
            <TextBlock Text="{Binding Message}"
                       Foreground="DarkGray"
                       Background="Transparent"/>
        </DataTemplate>

        <!--<wpf:EntryTemplateSelector x:Key="EntryTemplateSelector" 
                                   LogEntryTemplate="{StaticResource LogEntryTemplate}"
                                   ServiceEntryTemplate="{StaticResource ServiceEntryTemplate}"/>-->

        <Style x:Key="MainBorder" TargetType="Border">
            <Setter Property="Effect" Value="{StaticResource DropShadow}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}" 
                             Value="Maximized">
                    <Setter Property="Effect" Value="{StaticResource NoDropShadow}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>

    <Grid x:Name="mainGrid">
        <Grid.Style>
            <Style TargetType="Grid">
                <Setter Property="Margin" Value="20"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsDocked, RelativeSource={RelativeSource AncestorType=Window}}"
                                 Value="True">
                        <Setter Property="Margin" Value="0"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Grid.Style>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- BACKGROUND -->
        <Border Grid.RowSpan="2"
                Background="{StaticResource BG}"
                Opacity=".97"
                BorderBrush="{StaticResource Border}"
                BorderThickness="2"
                IsHitTestVisible="False">
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="8"/>
                    <Setter Property="Effect" Value="{StaticResource DropShadow}"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsDocked, RelativeSource={RelativeSource AncestorType=Window}}" 
                                     Value="True">
                            <Setter Property="CornerRadius" Value="0"/>
                            <Setter Property="Effect" Value="{StaticResource NoDropShadow}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
        </Border>

        <!-- HEADER-->
        <Grid Margin="2 2 2 0">
            <Grid.OpacityMask>
                <VisualBrush Visual="{Binding ElementName=headerBorder}"/>
            </Grid.OpacityMask>

            <Border x:Name="headerBorder"
                    Background="{StaticResource HeaderBG}"                    
                    VerticalAlignment="Stretch" 
                    HorizontalAlignment="Stretch"
                    MouseLeftButtonDown="headerBorder_MouseDown"
                    MouseMove="headerBorder_MouseMove">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="5 5 0 0"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsDocked, RelativeSource={RelativeSource AncestorType=Window}}" 
                                         Value="True">
                                <Setter Property="CornerRadius" Value="0"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>

            <TextBlock Text="{Binding WindowTitle}" d:Text="Terminal" Margin="8 0 0 0" VerticalAlignment="Center" HorizontalAlignment="Left"
                       Foreground="#999" IsHitTestVisible="False" FontFamily="Segoe" FontSize="14" FontWeight="Regular"/>

            <StackPanel Orientation="Horizontal"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Right">

                <Button x:Name="MinimizeButton"
                        Width="36" Height="28"
                        HorizontalAlignment="Right"
                        BorderThickness="0"
                        Click="MinimizeButton_Click"
                        Style="{StaticResource HeaderButton}">
                    <Button.Content>
                        <Viewbox Margin="0 2 0 0" HorizontalAlignment="Center" 
                                 VerticalAlignment="Center" Stretch="UniformToFill">
                            <Grid Margin="70">
                                <Line  X1="0" Y1="0" X2="80" Y2="0" Stroke="#bbb" StrokeThickness="8" />
                            </Grid>
                        </Viewbox>
                    </Button.Content>
                </Button>

                <Button x:Name="MaximizeButton"
                        Width="36" Height="28"
                        HorizontalAlignment="Right"
                        BorderThickness="0"
                        Click="MaximizeButton_Click"
                        Style="{StaticResource HeaderButton}">
                    <Button.Content>
                        <Rectangle Width="14" Height="11" Stroke="#bbb" StrokeThickness="1" Fill="Transparent"/>
                    </Button.Content>
                </Button>

                <Button x:Name="ExitButton"
                        Width="36" Height="28"
                        HorizontalAlignment="Right"
                        BorderThickness="0"
                        Click="ExitButton_Click"
                        Style="{StaticResource HeaderCloseButton}">
                    <Button.Content>
                        <Viewbox HorizontalAlignment="Center" 
                                 VerticalAlignment="Center" Stretch="UniformToFill">
                            <Grid Margin="100">
                                <Line  X1="0" Y1="0" X2="100" Y2="100" Stroke="#bbb" StrokeThickness="12" />
                                <Line  X1="0" Y1="100" X2="100" Y2="0" Stroke="#bbb" StrokeThickness="12" />
                            </Grid>
                        </Viewbox>
                    </Button.Content>
                </Button>

            </StackPanel>
        </Grid>

        <!-- MAIN -->
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>

            <ScrollViewer x:Name="scrollViewer"
                          VerticalScrollBarVisibility="Hidden"
                          HorizontalScrollBarVisibility="Disabled"
                          ScrollChanged="ScrollViewer_ScrollChanged"
                          Focusable="False">

                <ItemsControl  x:Name="logItems"
                               Margin="14 10" 
                               Focusable="False"
                               ItemsSource="{Binding Entries}">

                    <!--<d:ItemsControl.ItemsSource>
                        <x:Array Type="{x:Type log:IEntry}">
                            <log:LogEntry Message="Error Test"/>
                            <log:LogEntry Message="Warn Test" Level="Warning"/>
                            <log:LogEntry Message="Info Test" Level="Info"/>
                            <log:LogEntry Message="Debug Test" Level="Debug"/>
                            <models:ServiceEntry Message="command"/>
                            <log:LogEntry Message="Fatal Test" Level="Fatal"/>
                        </x:Array>
                    </d:ItemsControl.ItemsSource>-->

                </ItemsControl>
            </ScrollViewer>



            <Grid x:Name="commands"
                  Grid.Row="1"
                  DataContext="{Binding CommandViewModel}">

                <TextBlock Text="{Binding AutocompleteSuggestion, Mode=TwoWay}"
                           d:Text="print"
                           x:Name="autocompleteSuggestionText"
                           Grid.Row="1"
                           Margin="20 16 0 6"
                           Foreground="DarkGray"
                           Opacity="0.5"
                           IsHitTestVisible="False"
                           Focusable="False"/>

                <TextBox Grid.Row="1"
                         x:Name="commandBox"
                         Margin="12"
                         Padding="6 4"                    
                         Background="#10ffffff"
                         Foreground="LightGray"
                         CaretBrush="DarkGray"
                         HorizontalAlignment="Stretch"
                         BorderThickness="0"
                         Text="{Binding CommandText, NotifyOnTargetUpdated=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                         d:Text="pri"
                         TargetUpdated="commandBox_TargetUpdated">
                    <TextBox.InputBindings>
                        <KeyBinding Key="Return" 
                                    Command="{Binding ExecuteCommand}"
                                    CommandParameter="{Binding ElementName=commandBox, Path=Text}"/>
                        <KeyBinding Key="Up"
                                    Command="{Binding FillPreviousUpCommandCommand}"/>
                        <KeyBinding Key="Down"
                                    Command="{Binding FillPreviousDownCommandCommand}"/>
                        <KeyBinding Key="Tab"
                                    Command="{Binding AutocompleteCommand}"
                                    CommandParameter="{Binding ElementName=commandBox, Path=Text}"/>
                    </TextBox.InputBindings>
                    <TextBox.Style>
                        <Style TargetType="TextBox">
                            <Style.Resources>
                                <Style TargetType="Border">
                                    <Setter Property="CornerRadius" Value="6"/>
                                </Style>
                            </Style.Resources>
                        </Style>
                    </TextBox.Style>
                </TextBox>
            </Grid>
        </Grid>

        <Grid x:Name="resizersGrid"
              Grid.RowSpan="2">
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsDocked, RelativeSource={RelativeSource AncestorType=Window}}"
                                     Value="True">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>

            <Rectangle x:Name="leftResizer"
                       Cursor="SizeWE"
                       VerticalAlignment="Stretch"
                       HorizontalAlignment="Left"
                       Width="8"
                       Fill="Transparent"
                       MouseLeftButtonDown="leftResizer_MouseLeftButtonDown"/>

            <Rectangle x:Name="rightResizer"
                       Cursor="SizeWE"
                       VerticalAlignment="Stretch"
                       HorizontalAlignment="Right"
                       Width="8"
                       Fill="Transparent"
                       MouseLeftButtonDown="rightResizer_MouseLeftButtonDown"/>

            <Rectangle x:Name="bottomResizer"
                       Cursor="SizeNS"
                       VerticalAlignment="Bottom"
                       HorizontalAlignment="Stretch"
                       Height="8"
                       Fill="Transparent"
                       MouseLeftButtonDown="bottomResizer_MouseLeftButtonDown"/>

            <Rectangle x:Name="topResizer"
                       Cursor="SizeNS"
                       VerticalAlignment="Top"
                       HorizontalAlignment="Stretch"
                       Height="6"
                       Fill="Transparent"
                       MouseLeftButtonDown="topResizer_MouseLeftButtonDown"/>

            <Rectangle x:Name="cornerRightResizer"
                       Cursor="SizeNWSE"
                       VerticalAlignment="Bottom"
                       HorizontalAlignment="Right"
                       Height="14"
                       Width="14"
                       Fill="Transparent"
                       MouseLeftButtonDown="cornerRightResizer_MouseLeftButtonDown"/>

        </Grid>

    </Grid>

</Window>
